---
description: 
globs: 
alwaysApply: true
---
## Change Management Rules

### BEFORE making ANY changes:
1. **Read the current implementation completely** - Use read_file to understand existing structure
2. **Identify what's working vs broken** - Explicitly list what should NOT be touched
3. **Make a targeted plan** - Explain exactly what will change and why
4. **Consider side effects** - List what OTHER parts might be affected

### Theme-Related Changes:
- **NEVER modify global CSS without theme-specific selectors**
- **ALWAYS test theme switching after CSS changes**
- **PRESERVE existing theme functionality** - If terminal theme works, don't touch its CSS

### Layout Changes:
- **Identify the minimal change needed** - Don't redesign when fixing a small issue
- **Test in browser** - Verify the exact issue exists before fixing

### Code Preservation:
- **If it ain't broke, don't fix it** - Only change what's explicitly broken
- **Use surgical changes** - Target specific classes/components, not broad refactors
